// the & operator selects the name of the covering variable ie in this case .header ( & === .header)
.header {
    position: relative;
    height: 80vh;
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)),
        url(../img/hero-small.jpg);

    background-size: cover;
    // clip-path is positioned in top left bottom and right with first value x and second y ( remember y moves from up to down in css
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    background-position: top;
    
    @supports(clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
        height: 95vh;
    }

    // you can set the media breakpoint not only at width but also at resolution and other specs as well depends on what you need. 192dpi is a high resolution screen macbook which is used as reference
        // the below logic will work if min width is 600px and resolution is more that 192dpi 
                                                    //, is like or in sass
    @media (min-resolution: 192dpi) and (min-width: 600px),
    // use this because safari doesn't support min-resolution
    (-webkit-min-device-pixel-ratio: 2) and (min-width: 600px), (min-width: 900px) {
        background-image: linear-gradient(to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)),
        url(../img/hero.jpg);
    }

    &__logo-box {   
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }

    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;

        text-align: center;
        transform: translate(-50%, -50%);
    }
}
