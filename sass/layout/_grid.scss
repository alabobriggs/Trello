.row{
    // rows will be 100% parent width till it gets to a size that can accomodate 114rem;
    max-width: 114rem;
    margin: 0 auto;
    @include respond(tab-port) {
        max-width: 50rem;  
    }

    // this selects the last child except the last child
    &:not(:last-child){
        margin-bottom: $gutter-vertical;
        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include clearFix;

    //[] is an attribute selector then ^ selects the first this that appears in the class you can also use * to select all classes that has "col-" as part of the attributes. $ means any class that ends with col-
    [class^="col-"]{
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
            
            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        // set width to 100%
        @include respond(tab-port) {
            width: 100% !important; // to make sure it applies
        }
    }

    

    .col{

        &-1-of-2{
                   // a css function that can perform calculations
                                // use th #{} arount a sass variable to use it   
            width: calc((100% - #{ $gutter-horizontal })/2);
            
        }
        &-1-of-3{
            width: calc((100% - (2 * #{ $gutter-horizontal })) / 3);
            
        }


        &-1-of-4{
                        // this means gutter-horizontal times 3 divided by 4
            width: calc((100% - (3 * #{ $gutter-horizontal })) / 4);
            
        }

        &-2-of-3 {
            width: calc( 2 * ((100% - (2 * #{ $gutter-horizontal })) / 3 ) + #{ $gutter-horizontal });
        }
        
        &-2-of-4 {
            // this means gutter-horizontal times 3 divided by 4
            width: calc(2 * ((100% - (3 * #{ $gutter-horizontal })) / 4) + #{ $gutter-horizontal });
        }

        &-3-of-4 {
            // this means gutter-horizontal times 3 divided by 4
            width: calc(3 * ((100% - (3 * #{ $gutter-horizontal })) / 4) + (2 * #{ $gutter-horizontal }));
        }
    }
    
}
