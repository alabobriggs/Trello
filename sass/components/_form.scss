.form{

    &__group:not(:last-child){
        margin-bottom: 2rem;
    }

    &__input{
        font-size: 1.5rem;
        font-family: inherit;
        color: inherit;
                        // give the left and right more padding so it will look better
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        // add this here so the element so on focus the following element below will not move
        border-bottom: 3px solid transparent;  
        width: 90%;
        display: block;  
        // you can also use ::placeholder
        &::-webkit-input-placeholder {
            color: $color-dark-grey-2;
        }
    
        &:focus{
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }
        
        // with the help the invalid property of the browser you can style
        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }
    }

    &__label{
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: $default-transition;
    }

    // when the placeholder is shown on the input element it means nothing has been written
                            // + is the direct adjacent sibling in the child element i.e the very next Â¬ is to selct all the siblings
    &__input:placeholder-shown + &__label {
        opacity: 0;
        // visibility:hidden makes the element totally disappear from the page
        visibility: hidden;
        transform: translateY(-4rem);
    }

    &__radio-group{
        // so the input groups will show side by side
        width: 49%;
        display: inline-block;
    }

    &__radio-input{
        display: none;
    }

    &__radio-label{
        font-size: $default-font-size;
        position: relative;
        cursor: pointer;
        // so text will start at the giving point
        padding-left: 4.5rem;
    }

    &__radio-button{
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        // the position must not be relative for the center trick to work
        position: absolute;
        top: -.4rem;
        left: 0;

        &::after{
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left:50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }
    // this is a pseudo class for input type checked
    &__radio-input:checked + &__radio-label &__radio-button::after{
        opacity: 1;
    }
}